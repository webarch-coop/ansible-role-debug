---
- name: Generate and write debugging info
  block:

    - name: Packages present
      ansible.builtin.apt:
        pkg:
          - python3-apt

    - name: Getent passwd
      ansible.builtin.getent:
        database: passwd

    - name: Getent groups
      ansible.builtin.getent:
        database: group
        split: ':'

    - name: Getent hosts
      ansible.builtin.getent:
        database: hosts

    - name: Getent services
      ansible.builtin.getent:
        database: services

    - name: Get the apt package facts
      ansible.builtin.package_facts:
        manager: apt

    - name: Debug the apt packages
      ansible.builtin.debug:
        var: ansible_facts.packages.keys()
        verbosity: 2

    - name: Debug the apt package facts
      ansible.builtin.debug:
        var: ansible_facts.packages
        verbosity: 2

    - fail:

    - name: Loop through the packages to check if MariaDB is installed
      ansible.builtin.set_fact:
        debug_mariadb: true
      when: pkg.key is regex('^mariadb-server$')
      loop: "{{ ansible_facts.packages | dict2items }}"
      loop_control:
        loop_var: pkg
        label: "{{ pkg.key }}"

    - name: MariaDB facts
      block:

        - name: Stat /root/.my.cnf
          ansible.builtin.stat:
            path: /root/.my.cnf
          register: debug_mariadb_root_mycnf

        # This is commented out as it fails, see this issue with the MySQL modules
        # https://github.com/ansible-collections/community.mysql/issues/215
        # - name: Query the MariaDB version and databases using the /root/.my.cnf file
        #   community.mysql.mysql_info:
        #     filter:
        #       - databases
        #       - engines
        #       - global_status
        #       - settings
        #       - users
        #       - version
        #     config_file: /root/.my.cnf
        #     login_user: root
        #     login_host: localhost
        #     login_port: 3306
        #   register: debug_mariadb_info
        #   when: debug_mariadb_root_mycnf.stat.exists

        - name: Query the MariaDB version and databases using a socket
          community.mysql.mysql_info:
            filter:
              - databases
              - engines
              - global_status
              - settings
              - users
              - version
            return_empty_dbs: true
            login_user: root
            login_unix_socket: /run/mysqld/mysqld.sock
          register: debug_mariadb_info
          when: not debug_mariadb_root_mycnf.stat.exists

      when: ("mariadb-server" in ansible_facts.packages())

    - name: "Write variables to {{ debug_dir }}/{{ debug_file }}"
      template:
        src: debug.yml.j2
        dest: "{{ debug_dir }}/{{ debug_file }}"
        mode: 0640
        owner: "{{ debug_owner }}"
        group: "{{ debug_group }}"
      check_mode: false

    - name: Fetch the variables file
      fetch:
        src: "{{ debug_dir }}/{{ debug_file }}"
        dest: "{{ debug_local_dir }}/{{ debug_file }}"
        flat: true
      check_mode: false
      when:
        - debug_fetch is defined
        - debug_fetch

    - name: Send the variables file by email
      block:

        - name: Slurp the variables file
          slurp:
            src: "{{ debug_dir }}/{{ debug_file }}"
          register: debug_variables_b64encoded

        - name: "Debug email sent"
          mail:
            from: "root@{{ inventory_hostname }}"
            to: "{{ debug_email_address | default('root@localhost') }}"
            subject: "{{ debug_email_subject | default('Ansible variables') }}"
            charset: us-ascii
            body: "{{ debug_variables_b64encoded['content'] | b64decode }}"
            host: localhost
            port: 25
            secure: never

      when:
        - ( debug_email is defined ) and ( debug_email )
        - ( debug_email_address is defined )

  when: debug
  tags:
    - debug
...
